import unittest
from HTMLTestRunner import HTMLTestRunner
from unit.test_mathfunc import TestMathFunc
import os.path

if __name__ == '__main__':
    suite = unittest.TestSuite()

    # ************************** suite中添加case *********************************
    # https://blog.csdn.net/u011436666/article/details/73473013#t2
    # # 使用addTests组织用例
    # # 方法一：按照tests中执行
    # tests = [TestMathFunc("test_add"), TestMathFunc("test_minus"), TestMathFunc("test_divide")]
    # suite.addTests(tests)

    # # 方法二：与在tes_mathfunc.py中使用unittest.main()执行顺序一致
    suite.addTests(unittest.TestLoader().loadTestsFromTestCase(TestMathFunc))

    # # 方法三：与在tes_mathfunc.py中使用unittest.main()执行顺序一致
    # case 所在路径
    case_path = os.path.split(os.path.realpath(__file__))[0]
    # case_path = os.path.join(proDir, "unit")
    # 在指定的case所在的路径里寻找所有名称模式匹配pattern的文件并加载其内容
    print(case_path)
    discover = unittest.defaultTestLoader.discover(case_path, 'test*.py')

    # *****************************************************************************

    # **************************** runner ***********************************
    # # 使用TextTestRunner执行runner,并执行
    # with open('UnittestTestReport.txt', 'a') as f:
    #     runner = unittest.TextTestRunner(stream = f, verbosity=2)
    #     runner.run(suite)

    # # 使用HTMLTestRunner实例化runner,并执行
    # 生成使用HTMLTestRunner生成HTML报告
    # 文件打开方式使用“w”会报错
    with open('HTMLReport.html', 'wb+') as fh:
        runner = HTMLTestRunner(stream=fh,
                                title='MathFunc Test Report',
                                description='generated by HTMLTestRunner.',
                                verbosity=2)
        runner.run(suite)
    # *******************************************************************************
